// Target platform agnostic config modules
soong_config_module_type {
    name: "gralloc_10_usage_bits",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["additional_gralloc_10_usage_bits"],
    properties: ["cppflags"],
}

gralloc_10_usage_bits {
    name: "gralloc_10_usage_bits_defaults",
    soong_config_variables: {
        additional_gralloc_10_usage_bits: {
            cppflags: ["-DADDNL_GRALLOC_10_USAGE_BITS=%s"],
        },
    },
}

soong_config_module_type {
    name: "target_alternative_futex_waiters",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["target_alternative_futex_waiters"],
    properties: [
        "cflags",
        "cppflags",
    ],
}

target_alternative_futex_waiters {
    name: "target_alternative_futex_waiters_defaults",
    soong_config_variables: {
        target_alternative_futex_waiters: {
            cflags: ["-DTARGET_ALTERNATIVE_FUTEX_WAITERS"],
            cppflags: ["-DTARGET_ALTERNATIVE_FUTEX_WAITERS"],
        },
    },
}

soong_config_module_type {
    name: "has_hh_vsync_issue",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["has_hh_vsync_issue"],
    properties: ["cppflags"],
}

has_hh_vsync_issue {
    name: "has_hh_vsync_issue_defaults",
    soong_config_variables: {
        has_hh_vsync_issue: {
            cppflags: ["-DHAS_HH_VSYNC_ISSUE"],
        },
    },
}

soong_config_module_type {
    name: "gralloc_handle_reserved_size",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["gralloc_handle_has_reserved_size"],
    properties: ["export_cflags"],
}

gralloc_handle_reserved_size {
    name: "gralloc_handle_has_reserved_size_defaults",
    soong_config_variables: {
        gralloc_handle_has_reserved_size: {
            export_cflags: ["-DGRALLOC_HANDLE_HAS_RESERVED_SIZE"],
        },
    },
}

soong_config_module_type {
    name: "target_shim_libs",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["target_ld_shim_libs"],
    properties: ["cppflags"],
}

target_shim_libs {
    name: "shim_libs_defaults",
    soong_config_variables: {
        target_ld_shim_libs: {
            cppflags: ["-DLD_SHIM_LIBS=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "vendor_init",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["target_init_vendor_lib"],
    properties: ["whole_static_libs"],
}

vendor_init {
    name: "vendor_init_defaults",
    soong_config_variables: {
        target_init_vendor_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_udfps_lib",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["target_surfaceflinger_udfps_lib"],
    properties: [
        "cppflags",
        "whole_static_libs",
    ],
}

surfaceflinger_udfps_lib {
    name: "surfaceflinger_udfps_lib_defaults",
    soong_config_variables: {
        target_surfaceflinger_udfps_lib: {
            cppflags: ["-DTARGET_PROVIDES_UDFPS_LIB"],
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "target_uses_prebuilt_dynamic_partitions",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["target_uses_prebuilt_dynamic_partitions"],
    properties: ["cppflags"],
}

target_uses_prebuilt_dynamic_partitions {
    name: "target_uses_prebuilt_dynamic_partitions_defaults",
    soong_config_variables: {
        target_uses_prebuilt_dynamic_partitions: {
            cppflags: ["-DTARGET_USES_PREBUILT_DYNAMIC_PARTITIONS"],
        },
    },
}

// Target platform agnostic config modules
soong_config_module_type {
    name: "camera_needs_client_info",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["camera_needs_client_info"],
    properties: ["cppflags"],
}

camera_needs_client_info {
    name: "camera_needs_client_info_defaults",
    soong_config_variables: {
        camera_needs_client_info: {
            cppflags: ["-DCAMERA_NEEDS_CLIENT_INFO"],
        },
    },
}

soong_config_module_type {
    name: "camera_needs_client_info_lib",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["camera_needs_client_info_lib"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

camera_needs_client_info_lib {
    name: "camera_needs_client_info_lib_defaults",
    soong_config_variables: {
        camera_needs_client_info_lib: {
            cppflags: ["-DCAMERA_NEEDS_CLIENT_INFO_LIB"],
            shared_libs: ["//hardware/oneplus:vendor.oneplus.hardware.camera@1.0"],
        },
    },
}

soong_config_module_type {
    name: "legacy_hw_disk_encryption",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["legacy_hw_disk_encryption"],
    properties: ["cppflags"],
}

legacy_hw_disk_encryption {
    name: "legacy_hw_disk_encryption_defaults",
    soong_config_variables: {
        legacy_hw_disk_encryption: {
            cppflags: ["-DLEGACY_HW_DISK_ENCRYPTION"],
        },
    },
}

soong_config_module_type {
    name: "no_cameraserver",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["has_legacy_camera_hal1"],
    properties: [
        "cppflags",
    ],
}

no_cameraserver {
    name: "no_cameraserver_defaults",
    soong_config_variables: {
        has_legacy_camera_hal1: {
            cppflags: [
                "-DNO_CAMERA_SERVER",
                "-Wno-overloaded-virtual",
            ],
        },
    },
}

soong_config_module_type {
    name: "camera_in_mediaserver",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["has_legacy_camera_hal1"],
    properties: [
        "overrides",
        "shared_libs",
    ],
}

camera_in_mediaserver {
    name: "camera_in_mediaserver_defaults",
    defaults: ["no_cameraserver_defaults"],
    soong_config_variables: {
        has_legacy_camera_hal1: {
            overrides: ["cameraserver"],
            shared_libs: [
                "android.hardware.camera.common@1.0",
                "android.hardware.camera.device@3.4",
                "android.hardware.camera.provider@2.6",
                "android.hardware.camera.provider@2.7",
                "libcameraservice",
                "libgui",
            ],
        },
    },
}

soong_config_module_type {
    name: "camera_parameter_library",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["uses_camera_parameter_lib"],
    properties: ["whole_static_libs"],
}

camera_parameter_library {
    name: "camera_parameter_library_defaults",
    soong_config_variables: {
        uses_camera_parameter_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "egl_display_array",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    bool_variables: ["uses_egl_display_array"],
    properties: ["cflags"],
}

egl_display_array {
    name: "egl_display_array_defaults",
    soong_config_variables: {
        uses_egl_display_array: {
            cflags: ["-DEGL_DISPLAY_ARRAY"],
        },
    },
}

// NVIDIA specific config modules
soong_config_module_type {
    name: "nvidia_enhancements",
    module_type: "cc_defaults",
    config_namespace: "evolutionNvidiaVars",
    bool_variables: ["uses_nvidia_enhancements"],
    properties: ["cppflags"],
}

nvidia_enhancements {
    name: "nvidia_enhancements_defaults",
    soong_config_variables: {
        uses_nvidia_enhancements: {
            cppflags: ["-DNV_ANDROID_FRAMEWORK_ENHANCEMENTS"],
        },
    },
}

// QCOM specific config modules
soong_config_module_type {
    name: "librmnetctl_pre_uplink",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["uses_pre_uplink_features_netmgrd"],
    properties: ["cflags"],
}

librmnetctl_pre_uplink {
    name: "librmnetctl_pre_uplink_defaults",
    soong_config_variables: {
        uses_pre_uplink_features_netmgrd: {
            cflags: ["-DNO_UPLINK_FEATURES"],
        },
    },
}

soong_config_module_type {
    name: "qti_camera_device",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["uses_qti_camera_device"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

qti_camera_device {
    name: "qti_camera_device_defaults",
    soong_config_variables: {
        uses_qti_camera_device: {
            cppflags: ["-DQTI_CAMERA_DEVICE"],
            shared_libs: ["vendor.qti.hardware.camera.device@1.0"],
        },
    },
}

soong_config_module_type {
    name: "camera_boottime_timestamp",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["needs_camera_boottime_timestamp"],
    properties: [
        "cflags",
    ],
}

camera_boottime_timestamp {
    name: "needs_camera_boottime_defaults",
    soong_config_variables: {
        needs_camera_boottime_timestamp: {
            cflags: ["-DTARGET_CAMERA_BOOTTIME_TIMESTAMP"],
        },
    },
}

soong_config_module_type {
    name: "extended_compress_format",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["supports_extended_compress_format"],
    properties: ["cflags"],
}

extended_compress_format {
    name: "extended_compress_format_defaults",
    soong_config_variables: {
        supports_extended_compress_format: {
            cflags: ["-DENABLE_EXTENDED_COMPRESS_FORMAT"],
        },
    },
}

soong_config_module_type {
    name: "vold_hw_fde",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["supports_hw_fde"],
    properties: [
        "cflags",
        "header_libs",
        "shared_libs",
    ],
}

vold_hw_fde {
    name: "vold_hw_fde_defaults",
    soong_config_variables: {
        supports_hw_fde: {
            cflags: ["-DCONFIG_HW_DISK_ENCRYPTION"],
            header_libs: ["libcryptfs_hw_headers"],
            shared_libs: ["libcryptfs_hw"],
        },
    },
}

soong_config_module_type {
    name: "vold_hw_fde_perf",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["supports_hw_fde_perf"],
    properties: [
        "cflags",
        "shared_libs",
    ],
}

vold_hw_fde_perf {
    name: "vold_hw_fde_perf_defaults",
    soong_config_variables: {
        supports_hw_fde_perf: {
            cflags: ["-DCONFIG_HW_DISK_ENCRYPT_PERF"],
            shared_libs: ["libcryptfs_hw"],
        },
    },
}

soong_config_module_type {
    name: "qti_cryptfshw_qsee",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    bool_variables: ["should_wait_for_qsee"],
    properties: ["cflags"],
}

qti_cryptfshw_qsee {
    name: "qti_cryptfshw_qsee_defaults",
    soong_config_variables: {
        should_wait_for_qsee: {
            cflags: ["-DWAIT_FOR_QSEE"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_qcom_extensions",
    module_type: "cc_defaults",
    config_namespace: "evolutionQcomVars",
    value_variables: ["qcom_display_headers_namespace"],
    properties: [
        "cppflags",
        "header_libs",
    ],
}

surfaceflinger_qcom_extensions {
    name: "surfaceflinger_qcom_ext_defaults",
    soong_config_variables: {
        qcom_display_headers_namespace: {
            cppflags: ["-DQCOM_UM_FAMILY"],
            header_libs: ["//%s:display_intf_headers"],
        },
    },
}

soong_config_module_type {
    name: "inputdispatcher_skip_event_key",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["target_inputdispatcher_skip_event_key"],
    properties: ["cppflags"],
}

inputdispatcher_skip_event_key {
    name: "inputdispatcher_skip_event_key_defaults",
    soong_config_variables: {
        target_inputdispatcher_skip_event_key: {
            cppflags: ["-DINPUTDISPATCHER_SKIP_EVENT_KEY=%s"],
        },
    },
}

soong_config_module_type {
    name: "force_build_fingerprint",
    module_type: "cc_defaults",
    config_namespace: "evolutionGlobalVars",
    value_variables: ["force_build_fingerprint"],
    properties: [
        "cppflags"
    ],
}

force_build_fingerprint {
    name: "force_build_fingerprint_defaults",
    soong_config_variables: {
        force_build_fingerprint: {
            cppflags: ["-DTARGET_FORCE_BUILD_FINGERPRINT=\"%s\""],
        },
    },
}

bootstrap_go_package {
    name: "soong-evolution",
    pkgPath: "evolution/soong/android",
    srcs: [
        "android/config.go",
        "android/variable.go",
    ],
}
